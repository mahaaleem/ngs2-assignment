# 1- Install STAR 2 tools
conda install -c bioconda star 
conda install -c bioconda/label/cf201901 star 

#2- Add and align all reads 

for R1 in /media/maha/Elements/ngs2-assignment/*_SRR8797509_1.part_001.fastq ;do
SM=$(basename "$R1" | cut -d"_" -f1)
LB=$(basename "$R1" | cut -d"_" -f1,2)
PL="Illumina"
RGID=$(zcat "$R1" | head -n1 | sed 's/:/_/g' |cut -d "_" -f1,2,3,4)
PU="$RGID"."$LB"
echo -e "@RG\tID:$RGID\tSM:$SM\tPL:$PL\tLB:$LB\tPU:$PU"
R2=$(echo "$R1" | sed 's/_R1_/_R2_/')
echo "$R1" "$R2"
done


genomeDir=/media/maha/Elements/ngs2-assignment/chr22
mkdir $genomeDir
STAR --runMode genomeGenerate --genomeDir $genomeDir --genomeFastaFiles /media/maha/Elements/ngs2-assignment/gencode.v29.pc_transcripts.chr22.simplified.fa --runThreadN 7


runDir=/media/maha/Elements/ngs2-assignment/1pass
mkdir $runDir
cd $runDir

STAR --genomeDir $genomeDir  --readFilesIn /media/maha/Elements/ngs2-assignment/not_SRR8797509_1.part_001.fastq /media/maha/Elements/ngs2-assignment/not_SRR8797509_2.part_001.fastq --runThreadN 7

runDir=/media/maha/Elements/ngs2-assignment/2pass
mkdir $runDir
cd $runDir

STAR --genomeDir $genomeDir  --readFilesIn /media/maha/Elements/ngs2-assignment/shuffled_SRR8797509_1.part_001.fastq /media/maha/Elements/ngs2-assignment/shuffled_SRR8797509_2.part_001.fastq --runThreadN 7

#3-generate & sort BAM files
cd ..
for samfile in /media/maha/Elements/ngs2-assignment/1pass/*.sam;do
  sample=${samfile%.sam}
  samtools view -hbo $sample.bam $samfile
  samtools sort $sample.bam -o $sample.sorted.bam
done

for samfile in /media/maha/Elements/ngs2-assignment/2pass/*.sam;do
  sample=${samfile%.sam}
  samtools view -hbo $sample.bam $samfile
  samtools sort $sample.bam -o $sample.sorted.bam
done


# 4- Merge replicates using Picard tools
# Install Picard tools
conda install -c bioconda picard 
picard_path=$CONDA_PREFIX/share/picard-2.19.0-0

# merge the replicates

java -jar /home/maha/miniconda3/pkgs/picard-2.19.2-0/share/picard-2.19.2-0/picard.jar AddOrReplaceReadGroups I=/media/maha/Elements/ngs2-assignment/1pass/Aligned.out.sam O=/media/maha/Elements/ngs2-assignment/1pass/rg_added_sorted.bam SO=coordinate RGID=id RGLB=library RGPL=platform RGPU=machine RGSM=sample 

java -jar /home/maha/miniconda3/pkgs/picard-2.19.2-0/share/picard-2.19.2-0/picard.jar MarkDuplicates I=/media/maha/Elements/ngs2-assignment/1pass/rg_added_sorted.bam O=/media/maha/Elements/ngs2-assignment/1pass/dedupped.bam CREATE_INDEX=true VALIDATION_STRINGENCY=SILENT M=output.metrics 
# check for the changes in the header
samtools view -H /media/maha/Elements/ngs2-assignment/1pass/rg_added_sorted.bam
samtools view -H /media/maha/Elements/ngs2-assignment/1pass/dedupped.bam

# 5- Split'N'Trim and reassign mapping qualities
cd ..
# 5.1. Install GATK
conda install -c bioconda gatk4 

# 5.2. as the GenomeAnalysisTK.jar is not used anymore in gatk4, the gencode.v29.pc_transcripts.chr22.simplified.fa file must be prepared to use as reference by converting it to .dict and .fai files using picard and samtools
java -jar /home/maha/miniconda3/pkgs/picard-2.19.2-0/share/picard-2.19.2-0/picard.jar CreateSequenceDictionary REFERENCE=gencode.v29.pc_transcripts.chr22.simplified.fa OUTPUT=gencode.v29.pc_transcripts.chr22.simplified.dict

samtools faidx gencode.v29.pc_transcripts.chr22.simplified.fa 

gatk SplitNCigarReads -R gencode.v29.pc_transcripts.chr22.simplified.fa -I /media/maha/Elements/ngs2-assignment/1pass/dedupped.bam -O SplitN.bam -skip-mq-transform 

# 6- mapping QC 
for bamFile in /media/maha/Elements/ngs2-assignment/1pass/*.sorted.bam;do
  output=${bamFile%.sorted.bam}
  samtools depth $bamFile | awk '{{sum+=$3}} END {{print "Average = ",sum/NR}}' > $output.cov
  samtools flagstat $bamFile > $output.stat
done

#7- Mark duplicate
for sample in /media/maha/Elements/ngs2-assignment/1pass/*.sorted.bam;do
  name=${sample%.sorted.bam}
  java  -Xmx2g -jar /home/maha/miniconda3/pkgs/picard-2.19.2-0/share/picard-2.19.2-0/picard.jar MarkDuplicates INPUT=$sample OUTPUT=$name.dedup.bam METRICS_FILE=$name.metrics.txt;
done

# 8- indexing
# samples
for sample in /media/maha/Elements/ngs2-assignment/1pass/*.dedup.bam;do
  name=${sample%.dedup.bam}
  java -Xmx2g -jar /home/maha/miniconda3/pkgs/picard-2.19.2-0/share/picard-2.19.2-0/picard.jar BuildBamIndex VALIDATION_STRINGENCY=LENIENT INPUT=$sample
done

# Reference [no need for this step here as we aleardy creat the .dict and .fai refrence files]
##ln -s /media/maha/Elements/ngs2-assignment/gencode.v29.pc_transcripts.chr22.simplified.fa .
##java -Xmx2g -jar $picard_path/picard.jar CreateSequenceDictionary R= gencode.v29.pc_transcripts.chr22.simplified.fa O=gencode.v29.pc_transcripts.chr22.simplified.dict
##samtools faidx  gencode.v29.pc_transcripts.chr22.simplified.fa

## Download known varinats
# Download known polymorphic sites
wget 'ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg18/1000G_phase1.snps.high_confidence.hg18.vcf.gz' -O 1000G_phase1.snps.high_confidence.hg18.vcf.gz
# Select variants on chr22 and correct chr name
gunzip 1000G_phase1.snps.high_confidence.hg18.vcf.gz
grep "^#" 1000G_phase1.snps.high_confidence.hg18.vcf > snps_hg18.vcf
grep "^22" 1000G_phase1.snps.high_confidence.hg18.vcf | sed 's/^22/chr22/' >> snps_hg18.vcf
gatk IndexFeatureFile -F snps_hg18.vcf

#9- Recalibrate Bases BQSR
# for sample in /media/maha/Elements/ngs2-assignment/1pass/*.dedup.bam;do
  name=${sample%.dedup.bam}

 #gatk --java-options "-Xmx2G" BaseRecalibrator \
#-R gencode.v29.pc_transcripts.chr22.simplified.fa -I $sample --known-sites snps_hg18.vcf \
-O $name.report

 # gatk --java-options "-Xmx2G" ApplyBQSR \
# -R gencode.v29.pc_transcripts.chr22.simplified.fa -I $sample -bqsr $name.report \
# -O $name.bqsr.bam --add-output-sam-program-record --emit-original-quals
#done

# i tried to use the for loop from the tut. however it keep giving error, so i try to make another code for the recalibration

gatk BaseRecalibrator \
-R gencode.v29.pc_transcripts.chr22.simplified.fa \
-I /media/maha/Elements/ngs2-assignment/1pass/dedupped.bam \
--known-sites snps_hg18.vcf \
-O /media/maha/Elements/ngs2-assignment/1pass/recalibration.table

gatk PrintReads  \
   -R gencode.v29.pc_transcripts.chr22.simplified.fa \
   -I /media/maha/Elements/ngs2-assignment/1pass/recalibration.table \
   -bqsr recalibration_report.grp \
   -o /media/maha/Elements/ngs2-assignment/1pass/BQSR.bam

#10- Joint variant calling using Haplotypecaller  
#10.1. assess genotype likelihood per-sample
# for sample in sample in /media/maha/Elements/ngs2-assignment/1pass/*.bqsr.bam;do
 # name=${sample%.bqsr.bam}

  #gatk --java-options "-Xmx2G" HaplotypeCaller \
  #-R gencode.v29.pc_transcripts.chr22.simplified.fa -I $sample \
 # --emit-ref-confidence GVCF \
#  --pcr-indel-model NONE \
#  -O $name.gvcf
#done
#10.2. combine samples
#gatk --java-options "-Xmx2G" CombineGVCFs \
#-R gencode.v29.pc_transcripts.chr22.simplified.fa \
#-V BD143_TGACCA_merged.gvcf \
#-V BD174_CAGATC_L005.gvcf \
#-V BD225_TAGCTT_L007.gvcf \
#-O raw_variants.gvcf
#10.3. Joint Genotyping
#gatk --java-options "-Xmx60G" GenotypeGVCFs \
#-R gencode.v29.pc_transcripts.chr22.simplified.fa \
#-V raw_variants.gvcf \
#--max-alternate-alleles 6 \
#-O raw_variants.vcf

# 10. Varient calling (i used the output from the merge step as it is the last output i got)
gatk HaplotypeCaller  \
  -R gencode.v29.pc_transcripts.chr22.simplified.fa  \
  -I /media/maha/Elements/ngs2-assignment/1pass/dedupped.bam \
  -O Output.gvcf


##10.4. annotated output
gatk --java-options "-Xmx60G" GenotypeGVCFs \
-R gencode.v29.pc_transcripts.chr22.simplified.fa \
-V Output.gvcf \
--max-alternate-alleles 6 \
--dbsnp snps_hg18.vcf \
-O raw_variants_ann.vcf

## check how many variant got annotated
grep -v "^#" raw_variants_ann.vcf | awk '{print $3}' | grep "^rs" | wc -l

#11- VCF statistics
#11.1. indexing the VCF file
conda install -c bioconda tabix
bgzip -c raw_variants_ann.vcf > raw_variants_ann.vcf.gz
tabix -p vcf raw_variants_ann.vcf.gz

# 11.2. Calculating some statistics for the vcf
conda install -c bioconda rtg-tools
rtg vcfstats raw_variants_ann.vcf.gz > stats.txt

#12- Split SNPs and indels
gatk --java-options "-Xmx2G" SelectVariants \
-R gencode.v29.pc_transcripts.chr22.simplified.fa \
-V raw_variants_ann.vcf \
--select-type-to-include SNP \
-O raw_variants_ann_SNP.vcf

gatk --java-options "-Xmx2G" SelectVariants \
-R gencode.v29.pc_transcripts.chr22.simplified.fa \
-V raw_variants_ann.vcf \
--select-type-to-include INDEL \
-O raw_variants_ann_INDEL.vc

## Assess the different filters in both known and novel
for var in "SNP" "INDEL";do
 input="raw_variants_ann_"$var".vcf"
 for filter in "QD" "MQ" "MQRankSum" "FS" "SOR" "ReadPosRankSum" "AN" "DP" "InbreedingCoeff";do
  filterValues=$var.$filter
  awk -v k="$filter=" '!/#/{n=split($8,a,";"); for(i=1;i<=n;i++) if(a[i]~"^"k) {sub(k,$3" ",a[i]); print a[i]}}' $input > $filterValues
  grep -v "^\." $filterValues > known.$var.$filter
  grep "^\." $filterValues > novel.$var.$filter
done; done
mkdir filters && cd filters
mv ../{*.SNP.*,SNP.*,*.INDEL.*,INDEL.*} .

## Calculating the DP threathols
cat SNP.DP INDEL.DP | awk '{sum+= $2; sumsq+= ($2)^2} END { print sum/NR, sqrt((sumsq-sum^2/NR)/NR), sum/NR + 5*sqrt((sumsq-sum^2/NR)/NR) }' 

# 13- SNP Variant filteration
cd ..
gatk --java-options "-Xmx2G" VariantFiltration \
-R gencode.v29.pc_transcripts.chr22.simplified.fa \
-V raw_variants_ann_SNP.vcf \
--filter-name "snpQD" \
--filter-expression "vc.hasAttribute('QD') && QD < 2.0" \
--filter-name "snpMQ" \
--filter-expression "vc.hasAttribute('MQ') && MQ < 40.0" \
--filter-name "snpMQRankSum" \
--filter-expression "vc.hasAttribute('MQRankSum') && MQRankSum < -12.5" \
--filter-name "snpFS" \
--filter-expression "vc.hasAttribute('FS') && FS > 60.0" \
--filter-name "snpSOR" \
--filter-expression "vc.hasAttribute('SOR') && SOR > 4.0" \
--filter-name "snpReadPosRankSum" \
--filter-expression "vc.hasAttribute('ReadPosRankSum') && ReadPosRankSum < -8.0" \
--filter-name "snpDP" \
--filter-expression "vc.hasAttribute('DP') && DP > 3105" \
-O raw_variants_ann_SNP_clean.vcf

## checking the filtered record
grep -v "^#" raw_variants_ann_SNP_clean.vcf | awk '{if($7!="PASS")print $0}'

# 14- INDEL Variant filteration
gatk --java-options "-Xmx2G" VariantFiltration \
-R gencode.v29.pc_transcripts.chr22.simplified.fa \
-V raw_variants_ann_SNP.vcf \
--filter-name "indelQD" \
--filter-expression "vc.hasAttribute('QD') && QD < 2.0" \
--filter-name "indelFS" \
--filter-expression "vc.hasAttribute('FS') && FS > 200.0" \
--filter-name "indelSOR" \
--filter-expression "vc.hasAttribute('SOR') && SOR > 10.0" \
--filter-name "indelReadPosRankSum" \
--filter-expression "vc.hasAttribute('ReadPosRankSum') && ReadPosRankSum < -20.0" \
--filter-name "indelInbreedingCoeff" \
--filter-expression "vc.hasAttribute('InbreedingCoeff') && InbreedingCoeff < -0.8" \
--filter-name "indelDP" \
--filter-expression "vc.hasAttribute('DP') && DP > 3105" \
-O raw_variants_ann_INDEL_clean.vcf
